---
- name: prueba packer - docker
  hosts: localhost
  gather_facts: yes
  become: true

  vars:
    #docker_version_deb: 5:20.10.1~3-0~debian-buster
    docker_version_yum: 18.09.9-3.el7
    # ubuntu vs debian https://raymii.org/s/tutorials/Ansible_-_Only_if_on_specific_distribution_or_distribution_version.html
    #docker_packages_deb:
    #  - docker-ce={{docker_version_deb | default('5:19.03.12~3-0~debian-buster') }}
    #  - docker-ce-cli={{docker_version_deb | default('5:19.03.12~3-0~debian-buster') }}
    #  - containerd
    #docker_packages_yum:
    #  - docker-ce-{{docker_version_yum | default('19.03.9-3.el7')}}
    #  - docker-ce-cli-{{docker_version_yum | default('19.03.9-3.el7')}}
    #  - containerd.io


    docker_packages_yum:
      - package: docker-ce
        version: "{{ docker_version_yum | default('19.03.9-3.el7') }}"
      - package: docker-ce-cli
        version: "{{ docker_version_yum | default('19.03.9-3.el7') }}"
      - package: containerd.io
        version: "{{ '1.4.3-3.1.el7' }}"

    docker_packages_deb:
      - package: docker-ce
        version: "{{ docker_version_deb | default('5:19.03.12~3-0~debian-buster') }}"
      - package: docker-ce-cli
        version: "{{ docker_version_deb | default('5:19.03.12~3-0~debian-buster') }}"
      - package: containerd.io
        version: "{{ '1.3.9-1' }}"

    docker_dependencies_deb:
      - apt-transport-https
      - ca-certificates
      - gnupg2
    docker_dependencies_yum:
      - ca-certificates
  tasks:

   - name: ping localhost
     ping:

   - name: Ensure dependencies are installed.
     apt: name={{docker_dependencies_deb}} state=present
     when: ansible_os_family == 'Debian'

   - name: Ensure dependencies are installed.
     yum: name={{docker_dependencies_yum}} state=present
     when: ansible_os_family == 'RedHat'

   - name: Copy repository RedHat
     get_url:
       url: https://download.docker.com/linux/centos/docker-ce.repo
       dest: /etc/yum.repos.d/docker.repo
       mode: '0644'
     when: ansible_os_family == 'RedHat'

   - name: add Docker apt-key
     apt_key:
       url: https://download.docker.com/linux/debian/gpg
     when: ansible_os_family == 'Debian'

   - name: check docker packages deb
     debug: msg={{ docker_packages_deb }}
     when: ansible_os_family == 'Debian'

   - name: check docker packages yum
     debug: msg={{ docker_packages_yum }}
     when: ansible_os_family == 'RedHat'
   
   - name: add Docker apt repository
     apt_repository:
       repo: deb [arch=amd64] https://download.docker.com/linux/{{ansible_distribution|lower}} {{ansible_distribution_release}} stable
       filename: 'docker'
     when: ansible_os_family == 'Debian'

   #- name: install docker debian
   #  apt: name={{ docker_packages_deb }} state=present
   #  when: ansible_os_family == 'Debian'

   - name: install docker debian
     apt:
       name: "{{ item.package }}={{ item.version }}"
       state: present
       force: True              # horrible esto. ver post 
       update_cache: true
     with_items: "{{ docker_packages_deb }}"
     when: ansible_os_family == 'Debian'
   
   #- name: install docker redhat
   #  yum: name={{ docker_packages_yum }} state=present
   #  when: ansible_os_family == 'RedHat'

   - name: install docker redhat
     yum:
       name: "{{ item.package }}-{{ item.version }}"
       allow_downgrade: yes
       state: present
       update_cache: true
     with_items: "{{ docker_packages_yum }}"
     when: ansible_os_family == 'RedHat'

   # falta levantar servicio de docker y dejarlo enable centos
