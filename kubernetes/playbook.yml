---
- name: packer - kubernetes
  hosts: localhost
  gather_facts: yes
  become: true

  vars:
    kubernetes_version: 1.20.2-00
    # ubuntu vs debian https://raymii.org/s/tutorials/Ansible_-_Only_if_on_specific_distribution_or_distribution_version.html
    kubernetes_packages:
      - package: kubeadm
        version: "{{ kubernetes_version | default('1.19.7-00') }}"
      - package: kubectl 
        version: "{{ kubernetes_version | default('1.19.7-00') }}"
      - package: kubelet
        version: "{{ kubernetes_version | default('1.19.7-00') }}"

    kubernetes_dependencies:
      - apt-transport-https
      - curl

  tasks:

   - name: Ensure dependencies are installed.
     apt:
       name: "{{ kubernetes_dependencies }}" 
       state: present
       update_cache: true

   - name: add kubernetes apt-key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

   - name: check kubernetes packages
     debug: 
       msg: "{{ kubernetes_packages }}"
   
   - name: add kubernetes apt repository
     apt_repository:
       repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
       filename: 'kubernetes'

   - name: install kubernetes
     apt:
       name: "{{ item.package }}={{ item.version }}" 
       state: present
       update_cache: true
     with_items: "{{ kubernetes_packages }}"

   - name: Hold kubeadm
     dpkg_selections:
       name: "{{ item.package }}"
       selection: hold
     with_items: "{{ kubernetes_packages }}"

   - name: create br_netfilter file and add module
     copy:
       dest: "/etc/modules-load.d/k8s.conf"
       content: 'br_netfilter'

   - name: Creating a file with content
     copy:
       dest: "/etc/sysctl.d/k8s.conf"
       content: |
         net.bridge.bridge-nf-call-ip6tables = 1
         net.bridge.bridge-nf-call-iptables = 1
   
   - name: Disable swap currently running
     shell: swapoff -a
     args:
       executable: /bin/bash

   # Ok en debian y centos
   - name: Disable swap
     replace: 
       path: "/etc/fstab"
       regexp: '^([^#].*?\sswap\s+(sw|swap)\s+.*)$'
       replace: '# \1'

   - name: Change cgroup driver docker
     copy:
       dest: "/etc/docker/daemon.json"
       content: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": { "max-size": "100m" },
          "storage-driver": "overlay2",
          "storage-opts": [ "overlay2.override_kernel_check=true" ]
        }

   # reiniciar el servicio de docker
   # verificar que docker este ok
